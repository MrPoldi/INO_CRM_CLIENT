@model IEnumerable<INO_CRM_API.Models.CompanyModel>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

@{
    ViewData["Title"] = "Page";
}

<h1>Page</h1>

<p>
    @{string role = httpContextAccessor.HttpContext.Session.GetString("role");}
    @if (role == "Admin" || role == "Moderator")
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CompanyId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NIP)
            </th>
            <th>
                Branch
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                Added by user
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NIP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Branch.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Login)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @if (role == "Admin" || role == "Moderator")
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.CompanyId });@:| 
                    }
                    @Html.ActionLink("Details", "Details", new { id = item.CompanyId })
                    @if (role == "Admin")
                    {
                        @:| 
                        @Html.ActionLink("Delete", "Delete", new { id = item.CompanyId });
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<ul class="pagination">
    @if (ViewBag.currentPage > 1)
    {
        <li class="page-item">
            <a class="page-link" asp-action="Page" asp-route-id="@(ViewBag.currentPage-1)">Previous</a>
        </li>
    }
    
    @for (int i = 0; i < ViewBag.pageCount; i++)
    {
        <li class="page-item">
            <a class="page-link @(i+1 == ViewBag.currentPage ? "active" : "")" asp-action="Page" asp-route-id="@(i+1)">@(i + 1)</a>
        </li>
    }

    @if (ViewBag.currentPage < ViewBag.pageCount)
    {
        <li class="page-item">
            <a class="page-link" asp-action="Page" asp-route-id="@(ViewBag.currentPage+1)">Next</a>
        </li>
    }

</ul>
